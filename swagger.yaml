swagger: "2.0"
info:
  {
    title: "Secure Attendance System API Docs",
    version: "1.0",
    description: "This was created as CMSE353 term project for EMU."
  }
tags:
- name: users
  description: users API

paths:
# [GET] users
  /users:
    get:
      tags:
      - users
      summary: Find All Users
      responses:
        200:
          description: 'OK'
        500:
          description: 'Server Error'

# [POST] users
    post:
      tags:
      - users
      summary: Add User
      parameters:
      - name: body
        in: body
        description: user Data
        required: true
        schema:
          $ref: '#/definitions/User'
      responses:
        201:
          description: 'Created'
        400:
          description: 'Bad Request'
        409:
          description: 'Conflict'
        500:
          description: 'Server Error'

# [GET] users/id
  /users/{id}:
    get:
      tags:
      - users
      summary: Find User By Id
      parameters:
      - name: id
        in: path
        description: User Id
        required: true
        type: integer
      responses:
        200:
          description: 'OK'
        409:
          description: 'Conflict'
        500:
          description: 'Server Error'

# [PUT] users/id
    put:
      tags:
      - users
      summary: Update User By Id
      parameters:
      - name: id
        in: path
        description: user Id
        required: true
        type: integer
      - name: body
        in: body
        description: user Data
        required: true
        schema:
          $ref: '#/definitions/User'
      responses:
        200:
          description: 'OK'
        400:
          description: 'Bad Request'
        409:
          description: 'Conflict'
        500:
          description: 'Server Error'

# [DELETE] users/id
    delete:
      tags:
      - users
      summary: Delete User By Id
      parameters:
      - name: id
        in: path
        description: user Id
        required: true
        type: integer
      responses:
        200:
          description: 'OK'
        409:
          description: 'Conflict'
        500:
          description: 'Server Error'

# definitions
definitions:
  UserRole:
    type: string
    description: |
      This is mainly to keep the strings consistent and less prone to errors. Should be used wherever role String is required.
    enum:
      - STUDENT
      - PARENT
      - TEACHER
      - CHAIR
      - SYSTEM_ADMINISTRATOR

  User:
    type: object
    description: This model represents each and every user in our system, it is required for authentication system.
    required:
        - email
        - password
        - role
    properties:
      id:
        type: number
        description: Autogenerated
      email:
        type: string
        description: User's email
      password:
        type: string
        description: User's plain text password, will be encrypted in the database.
      role:
        type: string
        $ref: '#/definitions/UserRole'
      student:
        type: object
        $ref: '#/definitions/Student'
      parent:
        type: object
        $ref: '#/definitions/Parent'

  Student:
    type: object
    required:
      - fullName
      - userId
    properties: 
      id:
        type: number
        description: Autogenerated
      fullName:
        type: string
        description: The student's full name
      
      user:
        type: object
        $ref: '#/definitions/User'
      userId:
        type: number
        description: The id of the user related to this student
      parent:
        type: object
        $ref: '#/definitions/Parent'
      courses:
        type: array
        items: 
          $ref: '#/definitions/CourseGroup'

  Parent:
    type: object
    required:
      - fullName
      - userId
    properties: 
      id:
        type: number
        description: Autogenerated
      fullName:
        type: string
        description: The parent's full name
      
      user:
        type: object
        $ref: '#/definitions/User'
      userId:
        type: number
        description: The id of the user related to this parent
      children:
        type: array
        items: 
          $ref: '#/definitions/Student'
  Teacher:
    type: object
    required:
      - fullName
      - userId
    properties: 
      id:
        type: number
        description: Autogenerated
      fullName:
        type: string
        description: The teacher's full name
      
      user:
        type: object
        $ref: '#/definitions/User'
      userId:
        type: number
        description: The id of the user related to this teacher
      courseGroups:
        type: array
        items: 
          $ref: '#/definitions/CourseGroup'

  CourseGroup:
    type: object
    description: This model represents each and every coure-group our system contains.
    required:
      - name
    properties: 
      id:
        type: number
        description: Autogenerated
      name:
        type: string
        description: |
          The course name, usually contains the group number aswell. example: CMSE353(01)
      teacher:
        type: object
        $ref: '#/definitions/Teacher'
      teacherId:
        type: number
        description: The id of the teacher related to this coursegroup
      students:
        type: array
        items: 
          $ref: '#/definitions/Student'
